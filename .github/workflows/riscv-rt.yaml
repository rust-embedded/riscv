on:
  push:
    branches: [ master ]
  pull_request:
  merge_group:

name: Build check (riscv-rt)

jobs:
  build-riscv:
    strategy:
      matrix:
        # All generated code should be running on stable now, MRSV is 1.85.0
        toolchain: [ stable, nightly, 1.85.0 ]
        target:
          - riscv32i-unknown-none-elf
          - riscv32im-unknown-none-elf
          - riscv32imc-unknown-none-elf
          - riscv32imac-unknown-none-elf
          - riscv32imafc-unknown-none-elf
          - riscv64imac-unknown-none-elf
          - riscv64gc-unknown-none-elf
        example:
          - empty
          - multi_core
        include:
          # Nightly is only for reference and allowed to fail
          - toolchain: nightly
            experimental: true
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental || false }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          targets: ${{ matrix.target }}
      - name: Build (no features)
        run: RUSTFLAGS="-C link-arg=-Triscv-rt/examples/device.x" cargo build --package riscv-rt --target ${{ matrix.target }} --example ${{ matrix.example }}
      - name : Build (s-mode)
        run: RUSTFLAGS="-C link-arg=-Triscv-rt/examples/device.x" cargo build --package riscv-rt --target ${{ matrix.target }} --example ${{ matrix.example }} --features=s-mode
      - name : Build (single-hart)
        run: RUSTFLAGS="-C link-arg=-Triscv-rt/examples/device.x" cargo build --package riscv-rt --target ${{ matrix.target }} --example ${{ matrix.example }} --features=single-hart
      - name : Build (v-trap)
        run: RUSTFLAGS="-C link-arg=-Triscv-rt/examples/device.x" cargo build --package riscv-rt --target ${{ matrix.target }} --example ${{ matrix.example }} --features=v-trap
      - name : Build (all features except u-boot)
        run: RUSTFLAGS="-C link-arg=-Triscv-rt/examples/device.x" cargo build --package riscv-rt --target ${{ matrix.target }} --example ${{ matrix.example }} --features=s-mode,single-hart,v-trap
      - name : Build (u-boot)
        run: RUSTFLAGS="-C link-arg=-Triscv-rt/examples/device.x" cargo build --package riscv-rt --target ${{ matrix.target }} --example empty --features=u-boot
  
  build-others:
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Build (no features)
        run: cargo build --package riscv-rt
      - name: Build (all features but u-boot)
        run: cargo build --package riscv-rt --features=s-mode,single-hart,v-trap
      - name: Build (u-boot)
        run: cargo build --package riscv-rt --features=u-boot
        
  # Job to check that all the builds succeeded
  build-check:
    needs:
    - build-riscv
    - build-others
    runs-on: ubuntu-latest
    if: always()
    steps:
      - run: jq --exit-status 'all(.result == "success")' <<< '${{ toJson(needs) }}'
